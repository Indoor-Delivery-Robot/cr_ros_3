<!--
  KeyOp launcher
 -->

<launch>
  
  <!-- Load amcl map -->
  <arg name="map_file" default="$(find cr_ros_3)/files/basement_map_gen4.yaml"/> <!-- _for_robot -->
  <arg name="robot" value="$(env CR_MODEL)"/>

  <!-- bringup flask webpage -->
  <include file="$(find cr_web)/launch/bringup.launch"/>
  
  <!-- launch custom navigation package-->
  <include file="$(find cr_ros_3)/launch/mutant_navigation.launch">
    <arg name="map_file" value="$(arg map_file)"/>
    <arg name="scan_topic" value="scan_filter"/>
    <arg name="open_rviz" value="true"/>
    <arg name="move_forward_only" value="false"/>
  </include>


  <!-- Launch custom code -->
  <!-- Add new nodes here-->
  <node pkg="cr_ros_3" type="turtlebot_teleop_key.py" name="turtlebot_teleop_key" output="screen"></node>
  <node pkg="cr_ros_3" type="pickup_recovery.py" name="pickup_recovery" output="screen"></node>
  <node pkg="cr_ros_3" type="rover_controller.py" name="rover_controller" output="screen">
    <param name="cam_topic" value="/usb_cam_node/image_raw/compressed"/>
  </node>


  <!-- fiducials (Aruco + static fid transforms -->
  <group if="$(eval arg('robot') == 'ALIEN')">
    <arg name="fids" default="true"/>
    <group if="$(arg fids)">
    <include file="$(dirname)/fiducials.launch">
      <arg name="camera" value="usb_cam_node"/>
      <arg name="image" value="image_raw"/>
      <arg name="cam_topic" value="/usb_cam_node/image_raw/compressed"/>
      <arg name="cam_height" value="0.73"/>
    </include>
    </group>
  </group>

  <group if="$(eval arg('robot') == 'MUTANT')">
    <arg name="fids" default="true"/>
    <group if="$(arg fids)">
    <include file="$(dirname)/fiducials.launch">
      <arg name="camera" value="raspicam_node"/>
      <arg name="image" value="image"/>
      <arg name="cam_topic" value="/raspicam_node/image/compressed"/>
      <arg name="cam_height" value="0.63"/>
    </include>
    </group>
  </group>
  


  <!-- voice launch -->
  <arg name="voice" default="true"/>
  <group if="$(arg voice)">
   <include file="$(find cr_ros_3)/launch/voice.launch"/>
  </group>
  <!-- NOTE: this 4-line block above can be used to modularly build a luanch file, with chunks of connected nodes that can be toggled on and off together-->
  <arg name="waypoints" default="true"/>
  <group if="$(arg waypoints)">
   <include file="$(find cr_ros_3)/launch/waypoints.launch"/>
  </group>
</launch>
